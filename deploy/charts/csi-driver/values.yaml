image:
  # Target image repository.
  repository: quay.io/jetstack/cert-manager-csi-driver
  # Target image version tag.
  tag: v0.0.0
  # Kubernetes imagePullPolicy on the csi-driver.
  pullPolicy: IfNotPresent
  # Setting a digest will override any tag
  # digest: sha256:xxxx

# Optional secrets used for pulling the csi-driver container image.
#
# For example:
#  imagePullSecrets:
#  - name: secret-name
imagePullSecrets: []

# Labels to apply to all resources.
commonLabels: {}

nodeDriverRegistrarImage:
  # Target image repository.
  repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
  # Target image version tag.
  tag: v2.10.0
  # Kubernetes imagePullPolicy on the node-driver.
  pullPolicy: IfNotPresent

livenessProbeImage:
  # Target image repository.
  repository: registry.k8s.io/sig-storage/livenessprobe
  # Target image version tag.
  tag: v2.12.0
  # Kubernetes imagePullPolicy on the liveness probe.
  pullPolicy: IfNotPresent
  # Setting a digest will override any tag.
  # digest: sha256:xxxx

app:
  # Verbosity of cert-manager-csi-driver logging.
  logLevel: 1 # 1-5
  # Options for CSI driver.
  driver:
    # Name of the driver to be registered with Kubernetes.
    name: csi.cert-manager.io
    # If enabled, this uses a CSI token request for creating
    # CertificateRequests. CertificateRequests are created by mounting the
    # pod's service accounts.
    useTokenRequest: false
    # Configures the hostPath directory that the driver writes and mounts volumes from.
    csiDataDir: /tmp/cert-manager-csi-driver
  # Options for the liveness container.
  livenessProbe:
    # The port that will expose the liveness of the csi-driver.
    port: 9809
  # Overrides the path to root kubelet directory in case of a non-standard Kubernetes install.
  kubeletRootDir: /var/lib/kubelet

# Optional additional annotations to add to the csi-driver DaemonSet.
daemonSetAnnotations: {}

# Optional additional annotations to add to the csi-driver pods.
podAnnotations: {}

# Optional additional labels to add to the csi-driver pods.
podLabels: {}

# Kubernetes pod resources requests/limits for cert-manager-csi-driver.
#
# For example:
#  resources:
#    limits:
#      cpu: 100m
#      memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi
resources: {}

# Kubernetes node selector: node labels for pod assignment.
# For example, use this to allow scheduling of DaemonSet on linux nodes only:
#  nodeSelector:
#    kubernetes.io/os: linux
nodeSelector: {}

# Kubernetes affinity: constraints for pod assignment.
# 
# For example:
#  affinity:
#    nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: foo.bar.com/role
#           operator: In
#           values:
#           - master
affinity: {}

# Kubernetes pod tolerations for cert-manager-csi-driver.
#
# For example:
#  tolerations:
#  - operator: "Exists"
tolerations: []

# Optional priority class to be used for the csi-driver pods.
priorityClassName: ""
