apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: csi.certmanager.k8s.io
spec:
  podInfoOnMount: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-csi
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-csi
rules:
- apiGroups: ["certmanager.k8s.io"]
  resources: ["certificaterequests"]
  verbs: ["get", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-csi
subjects:
- apiGroup:
  kind: ServiceAccount
  name: cert-manager-csi
  namespace: cert-manager
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cert-manager-csi
  namespace: cert-manager
spec:
  selector:
    matchLabels:
      app: cert-manager-csi
  template:
    metadata:
      labels:
        app: cert-manager-csi
    spec:
      serviceAccount: cert-manager-csi
      containers:
        - name: cert-manager-csi
          image: gcr.io/jetstack-josh/cert-manager-csi:v0.1.0-alpha.0
          imagePullPolicy: Always
          args:
            - --driver-name=csi.certmanager.k8s.io
            - --v=5
            - --endpoint=unix:///csi/csi.sock
            - --node-id=$(KUBE_NODE_NAME)
            - --kubelet-registration-path=/var/lib/kubelet/plugins/cert-manager-csi/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /csi-data-dir
              name: csi-data-dir
            - mountPath: /registration
              name: registration-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/cert-manager-csi
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            # 'path' is where data is persisted on host during mount of key/certs to pods.
            path: /var/lib/cert-manager-csi-data/
            type: DirectoryOrCreate
          name: csi-data-dir
